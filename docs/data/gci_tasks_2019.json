
{"count":84,"next":null,"previous":null,"results":[{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"This task involves reading real-world data and obtaining data-driven insights around R-Ladies Meetup events in 2018 and 2019. These events were extracted from the Meetup API for over 180 R-Ladies chapters\n\n1. Read the data files into R: \n\na. https://github.com/r-community/event-explorer/blob/master/docs/data/rladies_events_2019.rds?raw=true\n\nb. https://github.com/r-community/event-explorer/blob/master/docs/data/rladies_events_2018.rds?raw=true\n\nFor each dataset:\n\n2. Obtain a count (frequency) of events for each group and visualize the top 50 groups\n3. Obtain a count (frequency) of events for each city (venue_city) and visualize the top 50 cities (ignore NA values)\n4. Obtain a count (frequency) of events per country and visualize the top 20 countries (ignore NA values)\n5. Compute (in percentage) the increase of R-Ladies events from 2018 to 2019\n6. Provide a month-by-month comparison of R-Ladies events for 2018 and 2019 in a CSV table with visualization (as a two line charts in one plot.\n\nSubmit an R script and your visualizations. Your code should be reusable - assuming we have another set of similar data but with other dates, your code should also be able to produce accurate results with little or no changes.","tags":["r community explorer","data-driven exploration","meetup events","r statistical computing"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"R-Ladies: Data-Driven exploration of events","last_modified":"2020-01-15T12:27:04Z","available_count":0,"is_beginner":false,"id":6020512933740544,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":4,"program_year":2019,"description":"Find, on the internet, an R script (data analysis, simulation, etc) that, if optimized with rco, gets at least a 2X speedup (e.g., if it ran in 4 hours, now should run in 2 or less):\n\n1) measure the script's time execution with the `system.time({ ... })` function.\n2) optimize the code with rco (can be done with the `optimize_files` function).\n3) measure the optimized code execution time.\n4) get at least a 2X speedup.\n5) report your work as an issue to the rco package \"[real optimized code example]: ...\" https://github.com/jcrodriguez1989/rco/ . Report real code URL, which optimizations worked in the code, and any further considerations.","tags":["optimization","speedup","example"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":15,"name":"Find (on the internet) and optimize real R code with rco package.","last_modified":"2020-01-10T16:25:39Z","available_count":15,"is_beginner":false,"id":6141309492920320,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"There is a documented warning in current version [V 0.2.24] of package bdvis.\n\nWarning: Raster pixels are placed at uneven horizontal intervals and will be shifted. Consider using geom_tile() instead. [https://github.com/vijaybarve/bdvis/issues/110]\n\nSuggest a solution to get rid of this warning. This will involve modifying the code for the function mapgrid.\n\nPlease submit the modified function and explanation as your solution.","tags":["debug","code","programming"],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["vijay.barve@gmail.com"],"max_instances":3,"name":"bdvis: suggest a solution to remove warning [issue 110]","last_modified":"2020-01-09T21:34:33Z","available_count":2,"is_beginner":false,"id":6047231841402880,"categories":[1,4],"external_url":"https://github.com/vijaybarve/bdvis"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Vignette in R and detailed documentation of how a package (or part of package) can be used. One needs good understanding of the package to develop a vignette for the package. The task here is to create a Vignette for package bdvis.\n\n1. Read Vignette chapter from Hadley Wickham's R Packages book [https://r-pkgs.org/vignettes.html]\n2. If you have not completed \"Create samples of visualization outputs for functions in package bdvis\" task, complete that first.\n3. Make sure you have latest development version of the package from github\n3. Develop a Vignette using an interesting data set to showcase all possible visualizations with bdvis package. Use of single data set throughout the vignette is encouraged to make it efficient.\n4. Submit the .rmd and .doc or .pdf for review.","tags":["code","vignette"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["vijay.barve@gmail.com"],"max_instances":5,"name":"Develop a vignette for package bdvis","last_modified":"2020-01-06T15:45:38Z","available_count":3,"is_beginner":false,"id":6100292555243520,"categories":[1,3],"external_url":"https://github.com/vijaybarve/bdvis"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"We need to check all the example code written in help files of the package from the latest development version.\n\nSteps to follow:\n1. Install the development version of the package from github\n2. Open the help files for each functions and scroll down up to the example code\n3. Copy and paste the code in a R source file and try to run it. In case of any errors or problems, report them in issues section of the package. Create new issue for every problem https://github.com/vijaybarve/taxotools/issues\n4. Make sure you also provide session info with each issue report\n5. If all code runs successfully, report it here [https://github.com/vijaybarve/taxotools/issues/28] and make sure to post session info","tags":["code","testing"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["vijay.barve@gmail.com"],"max_instances":3,"name":"Check example code for package taxotools","last_modified":"2020-01-09T21:18:34Z","available_count":0,"is_beginner":false,"id":6689849428410368,"categories":[4],"external_url":"https://github.com/vijaybarve/taxotools"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Download the raw file of the data from: https://github.com/benubah/r-community-explorer/blob/master/docs/events_past_year.rds and save it in your current working directory. You may find it easier this way than to read it directly from the Web.\n\nCoding tasks:\n1. Read this data into R (example: https://mgimond.github.io/ES218/Week02b.html)\n2. Obtain the count of events for each city and country\n3. Obtain the top 50 groups that had more events\n4. Visualize the top 50 groups based on the count of their events\n\nVisualizations could come in the form of a of bar chart or pie chart.\n\nSubmit your R code and visualizations","tags":["visualization","r statistical computing","exploratory analysis"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["ishanrai05@gmail.com","ubah.ben22@gmail.com"],"max_instances":3,"name":"Exploring R events per city and country","last_modified":"2019-12-15T06:39:48Z","available_count":0,"is_beginner":false,"id":5608818180882432,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Download the raw file of the data from: https://github.com/benubah/r-community-explorer/blob/master/docs/events_past_year.rds and save it in your current working directory. You may find it easier this way than to read it directly from the Web.\n\nCoding tasks:\n1. Read this data into R (example: https://mgimond.github.io/ES218/Week02b.html)\n2. Obtain the count of events for each individual month beginning from August 2018 - August 2019\n3. Visualize this monthly count of events\n4. Obtain the count of events for each year (2018 and 2019) and visualize it.\n\nVisualizations could come in the form of a bar chart or pie chart.\n\nSubmit your R code and visualizations","tags":["visualization","r statistical computing","exploratory analysis"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["kr.vivek.ab@gmail.com","ubah.ben22@gmail.com"],"max_instances":3,"name":"Data Analysis and Visualization of R events Aug.2018 - Aug.2019","last_modified":"2019-12-15T14:34:47Z","available_count":0,"is_beginner":false,"id":4841456196386816,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Documentation:  \nCurate a csv (comma separated value) file that contains records for all past satRday events found here: https://satrdays.org/events/\nEach event has a dedicated website with information about the event.\n\nThe file will have the following structure: https://github.com/r-community/event-explorer/blob/master/docs/data/satrdays.csv\nBut the status of the events will be \"Past\" instead of \"Upcoming\". \nLeave out any columns for which you cannot find enough data on the satRday event website.\n\n\nCODING:\n1. Use R to read the CSV file you created\n2. Obtain summaries (counts) of the events by country, city and continent.\n3. Use `leafletR` package to generate a GeoJSON file from the CSV file.\n4. Obtain the total number of events and the total number of estimated attendees.","tags":["r statistical computing","satrdays","exploratory analysis"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"Exploratory analysis of past satRday events","last_modified":"2019-12-15T06:40:10Z","available_count":0,"is_beginner":false,"id":5912137092825088,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2019,"description":"Learn how to create a function for  downloading files from the internet and saving on your local machine. \n\nAfter having completed sections, __The Basics__, __Upgrade 1__, and __Upgrade 3__, please complete the section, __[Putting it all together](https://github.com/lgreski/datasciencectacontent/blob/master/markdown/rprog-downloadingFiles.md#putting-it-all-together-a-function-for-downloading-files)__  in the following tutorial: \nhttps://github.com/lgreski/datasciencectacontent/blob/master/markdown/rprog-downloadingFiles.md","tags":["r","download files","training"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["JessicaLeighBurnett@gmail.com"],"max_instances":25,"name":"Create a function for downloading files from the internet","last_modified":"2019-12-04T17:03:06Z","available_count":25,"is_beginner":true,"id":4687868207824896,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2019,"description":"Learn how to download files and decompress .zip files from the internet and save on your local machine. \n\nAfter having completed the section, __The Basics__, complete the section, __[Upgrade 3](https://github.com/lgreski/datasciencectacontent/blob/master/markdown/rprog-downloadingFiles.md#upgrade-3-handling-compressed-files)__, in the following tutorial: \nhttps://github.com/lgreski/datasciencectacontent/blob/master/markdown/rprog-downloadingFiles.md","tags":["r","download files","training"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["JessicaLeighBurnett@gmail.com"],"max_instances":25,"name":"Learn how to handle compressed files in R","last_modified":"2019-12-04T17:03:29Z","available_count":25,"is_beginner":true,"id":4925204904542208,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2019,"description":"Learn how to download files from the internet and save on your local machine. \n\nComplete the section, __The Basics__ in the following tutorial: \nhttps://github.com/lgreski/datasciencectacontent/blob/master/markdown/rprog-downloadingFiles.md","tags":["r","download files","learning"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["JessicaLeighBurnett@gmail.com"],"max_instances":12,"name":"Download files from the internet","last_modified":"2019-12-04T17:03:25Z","available_count":12,"is_beginner":true,"id":6339924962312192,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":3,"program_year":2019,"description":"**Create a data object from multiple .csv files for R package  [bbsAssistant](https://github.com/TrashBirdEcology/bbsAssistant)**\n\nCombine and create a single object (e.g., .txt, .csv) comprising all the data frames associated with the book, 'Handbook of Avian Body Masses' by Dunning Jr.  This companion cd associated with this book contains a bunch of body masses (weights) for individual bird species. We would like to bring all these spreadsheets together into a single data frame, and will eventually store it as a data object in our package.\n\n[Data source](https://www.crcpress.com/CRC-Handbook-of-Avian-Body-Masses/Dunning-Jr/p/book/9781420064445)(see the \"Additional Resources\" tab--> \"64444_Companion_CD.zip\")","tags":["r","ecology","data munging"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["JessicaLeighBurnett@gmail.com"],"max_instances":1,"name":"Create a data object from multiple .csv - r package bbsAssistant","last_modified":"2019-12-04T16:52:47Z","available_count":1,"is_beginner":false,"id":5612381929996288,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"__Users have requested that basic visualization functions be provided to R package [bbsAssistant](https://github.com/TrashBirdEcology/bbsAssistant/)__\n\nWe seek help (see [Issue 87 in `bbsAssistant` repository](https://github.com/TrashBirdEcology/bbsAssistant/issues/87)) for creating basic visualization functions for depicting general summary statistics for individual species onto spatial maps (e.g. [heat maps similar to this example](https://mk0brilliantmaptxoqs.kinstacdn.com/wp-content/uploads/2016nationwidecountymapshadedbyvoteshare.png)). For example, a spatial map comprising absolute occurrences (e.g., species A is present or not present at a location-binary) or relative abundances (e.g., a relative heatmap of Species A 'abundance). \n\nFurther, we wish to provide the opportunity for the user map basic statistics at multiple spatial scales. For example, mapping at the U.S. state level, at the U.S. county level, or at regional levels (e.g., [Bird Conservation Regions](https://www.sciencebase.gov/catalog/item/59d3e397e4b05fe04cc3d306)).\n\nWe are open to suggestions of which spatial projections to use, and which source maps for U.S. and Canadian state and county-level maps (e.g., using `Ggmap` vs. a spatial data package within the `bbsAssistant` package). \n\n![Example of a heat map](https://mk0brilliantmaptxoqs.kinstacdn.com/wp-content/uploads/2016nationwidecountymapshadedbyvoteshare.png)","tags":["visualization","r","ecology","data mapping","maps"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["JessicaLeighBurnett@gmail.com"],"max_instances":3,"name":"Create basic data mapping visualizations","last_modified":"2019-12-04T16:53:25Z","available_count":3,"is_beginner":false,"id":5630829351403520,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"We need to check all the code written in the help files of the package from the latest development version of [rangemap](https://github.com/marlonecobos/rangemap).\n\nSteps to follow:\n1. Install the development version of the package from github\n2. Open the help files for each functions and scroll down up to the example code\n3. Copy and paste the code in a R source file and try to run it. In case of any errors or problems, report them in issues section of the package. Create new issue for every problem [here](https://github.com/marlonecobos/rangemap/issues)\n4. Make sure you also provide session info with each issue report\n5. If all code runs successfully, report it [here](https://github.com/marlonecobos/rangemap/issues/3) and make sure to post session info","tags":["code","testing"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["manubio13@gmail.com","vijay.barve@gmail.com"],"max_instances":3,"name":"Check the sample code from help files for package rangemap","last_modified":"2019-12-05T07:56:12Z","available_count":0,"is_beginner":false,"id":6091962474561536,"categories":[4],"external_url":"https://github.com/marlonecobos/rangemap"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"We need to check all the example code written in help files of the package from the latest development version.\n\nSteps to follow:\n1. Install the development version of the package from github\n2. Open the help files for each functions and scroll down up to the example code\n3. Copy and paste the code in a R source file and try to run it. In case of any errors or problems, report them in issues section of the package. Create new issue for every problem https://github.com/vijaybarve/bdvis/issues\n4. Make sure you also provide session info with each issue report\n5. If all code runs successfully, report it here [https://github.com/vijaybarve/bdvis/issues/106] and make sure to post session info","tags":["code","testing"],"claimed_count":4,"private_metadata":"","completed_count":4,"mentors":["vijay.barve@gmail.com"],"max_instances":5,"name":"Check example code for package bdvis","last_modified":"2020-01-06T13:52:55Z","available_count":1,"is_beginner":false,"id":6348626364727296,"categories":[4],"external_url":"https://github.com/vijaybarve/bdvis/"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [rangemap R project in Google Summer Of Code](https://github.com/marlonecobos/rangemap) organization. May your creativity be helped by the idea of relating [R](https://www.r-project.org/logo/Rlogo.png) and [Google Summer Of Code](https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal-800.png) logos.\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. Draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nSubmit your logo artwork in the comments section of [this issue](https://github.com/marlonecobos/rangemap/issues/2)","tags":["logo","hexbin","examples","artwork"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["vijay.barve@gmail.com","manubio13@gmail.com"],"max_instances":3,"name":"Create a Hex Logo for package rangemap","last_modified":"2020-01-02T19:40:51Z","available_count":0,"is_beginner":false,"id":5860736501284864,"categories":[2],"external_url":"https://github.com/marlonecobos/rangemap"},{"status":1,"time_to_complete_in_days":3,"program_year":2019,"description":"In this task we want to find the costumer segmentation.  Find groups of customers that differ in important ways associated with product interest. \n\n1. show your dataset and make a copy from your dataset without variable segment.\n2.cluster the dataset using hierarchical clustering and cut in to some segments.\n3. visualize the result with 5 groups segments.\n\nGood luck!","tags":["visualization","segmentation","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ozifahrozi2@gmail.com"],"max_instances":2,"name":"Segmentation Music Subscription data","last_modified":"2019-12-26T19:32:37Z","available_count":2,"is_beginner":true,"id":6243856710893568,"categories":[1,3],"external_url":"https://github.com/FahroziFahrozi/Google-Code-In-Task/blob/master/music-subscription.csv"},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [WeightedROC](https://github.com/tdhock/WeightedROC) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package WeightedROC","last_modified":"2019-12-08T12:56:31Z","available_count":2,"is_beginner":false,"id":4877660799369216,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [nc](https://github.com/tdhock/nc) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package nc","last_modified":"2019-12-08T12:56:39Z","available_count":2,"is_beginner":false,"id":5917922246000640,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [namedCapture](https://github.com/tdhock/namedCapture) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package namedCapture","last_modified":"2019-12-08T12:59:29Z","available_count":2,"is_beginner":false,"id":4862309982273536,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [PeakSegDisk](https://github.com/tdhock/PeakSegDisk) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package PeakSegDisk","last_modified":"2019-12-08T13:02:11Z","available_count":2,"is_beginner":false,"id":6088945025155072,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [PeakSegPipeline](https://github.com/tdhock/PeakSegPipeline) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package PeakSegPipeline","last_modified":"2019-12-08T13:01:57Z","available_count":2,"is_beginner":false,"id":5884701781262336,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [animint2](https://github.com/tdhock/animint2) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package animint2","last_modified":"2019-12-08T13:01:40Z","available_count":2,"is_beginner":false,"id":5637423703261184,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [PeakSegJoint](https://github.com/tdhock/PeakSegJoint) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","r","pkdown"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package PeakSegJoint","last_modified":"2019-12-08T12:57:36Z","available_count":2,"is_beginner":false,"id":5812656456335360,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [directlabels](https://github.com/tdhock/directlabels) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package directlabels","last_modified":"2019-12-08T12:57:12Z","available_count":2,"is_beginner":false,"id":5952511362465792,"categories":[1,3],"external_url":null},{"status":2,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [PeakSegDP](https://github.com/tdhock/PeakSegDP) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)","tags":["website","pkgdown","r"],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["ishanrai05@gmail.com"],"max_instances":1,"name":"Create a pkgdown web site for package PeakSegDP","last_modified":"2019-12-06T09:58:20Z","available_count":0,"is_beginner":false,"id":5647621398462464,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [penaltyLearning](https://github.com/tdhock/penaltyLearningl) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package penaltyLearning","last_modified":"2019-12-08T12:56:59Z","available_count":2,"is_beginner":false,"id":6102703181135872,"categories":[1,3],"external_url":null},{"status":1,"time_to_complete_in_days":5,"program_year":2019,"description":"Create a website for the package [PeakSegOptimal](https://github.com/tdhock/PeakSegOptimal) using `pkgdown`, a library in R that makes it quick and easy to make websites for any package.\n - Link to tutorial: https://pkgdown.r-lib.org/\n - Examples: WebSite(http://mc-stan.org/bayesplot/index.html) [Source](https://github.com/stan-dev/bayesplot/tree/gh-pages)\n\n## Steps\n1. Fork and clone the original Repository.\n2. Create a website for the package using `pkgdown`\n3. Commit your changes.\n4. Host the website on your GitHub.\n5. Create a Pull Request\n\n## Deliveries:\n - Link to the website hosted on your GitHub.\n - Link to the Pull Request.\n - Add charts, instructions of installation, examples, run the package, show graphs, and be informative (refer the example website).","tags":["website","pkgdown","r"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com"],"max_instances":2,"name":"Create a pkgdown web site for package PeakSegOptimal","last_modified":"2019-12-08T12:59:06Z","available_count":2,"is_beginner":false,"id":4614689179303936,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"1. Write code that reads this [CSV file](https://jumpingrivers.github.io/meetingsR/groups.csv), remove all those records that contain the string, \"meetup.com\" in the 5th column and save the rest in a new CSV file.\n2. Add latitude and longitude columns with corresponding values to the new CSV file generated above.\n3. Generate a GeoJSON data file from this new CSV file","tags":["r statistical computing","csv","geojson"],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["ishanrai05@gmail.com","ubah.ben22@gmail.com"],"max_instances":3,"name":"R Community Explorer: Read, write CSV and create GeoJSON file","last_modified":"2020-01-17T20:31:47Z","available_count":2,"is_beginner":false,"id":5083044625514496,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"[Git](https://en.wikipedia.org/wiki/Git) is a version control system used to organise code, keep track of changes made and collaborate with people.\n\nGitHub is a web-based hosting service for version control using Git, commonly used for sharing the code with the world.\n\nFor this task, you are required to:\n\nCreate an account on [Github](https://github.com/)\nCreate a new repository\nOpen a new dummy issue in the repository\nCreate a R-based hello-world program and commit it to the repository\nCreate a new branch making changes to the hello-world program, and send a pull request to the master branch.\nAdd a sample readme to the project.\nAdd a LICENSE and a .gitignore file to the repository\nSubmission Requirements:\n\nDescribe in-detail how did you complete this task\nLink to your created issue.\nLink to your created repository\nFor example, this is a demo of completing all the tasks in this repository https://github.com/pro-panda/new-repository\n\nhttps://github.com/pro-panda/new-repository","tags":["r","opensource","helloworld","github"],"claimed_count":7,"private_metadata":"","completed_count":7,"mentors":["ishanrai05@gmail.com","kr.vivek.ab@gmail.com"],"max_instances":7,"name":"Setup Git and a GitHub account","last_modified":"2019-12-03T07:55:48Z","available_count":0,"is_beginner":true,"id":5142954755227648,"categories":[3,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"animint2 is an R package for creating animated and interactive data visualizations using a grammar of graphics. An online manual is available, and the best page to get started is http://members.cbio.mines-paristech.fr/~thocking/animint2-manual/Ch02-ggplot2.html\n\nFor this task your goal is to create an interactive data visualization and post it online using the animint2gist function which is described here,  http://members.cbio.mines-paristech.fr/~thocking/animint2-manual/Ch05-sharing.html#animint2gist\n\nYou will need to install R and the animint2 package, then execute some code for creating an interactive data viz, then use the animint2gist function to post the data viz online on your gist profile.\n\nThe data viz must be the result of one of the exercises described in the animint2 online manual. At the bottom of each web page is a section \"Chapter summary and exercises\" which contains several exercises which are appropriate for this task. Links above are for chapter 2 and 5 but you can do any exercise in any chapter, as long as you post the result as a gist. Make sure to include the bl.ocks.org link as your task result here, e.g.\nhttp://bl.ocks.org/tdhock/raw/8495cd5164a38c360ee1/\nhttp://bl.ocks.org/tdhock/raw/aef616ba22fee33e82f5/\nhttp://bl.ocks.org/tdhock/raw/cfc5d67636ee76d42be0/\nhttp://bl.ocks.org/tdhock/raw/10f27e4ace80bffa10a0/\n\nThe easier version of this task is https://codein.withgoogle.com/dashboard/tasks/4818087656816640/","tags":["data viz"],"claimed_count":8,"private_metadata":"","completed_count":7,"mentors":["kr.vivek.ab@gmail.com","tdhock5@gmail.com"],"max_instances":20,"name":"(hard) Interactive data visualization exercises using animint2","last_modified":"2019-12-04T17:37:37Z","available_count":12,"is_beginner":false,"id":5702474908827648,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"animint2 is an R package for creating animated and interactive data visualizations using a grammar of graphics. An online manual is available, and the best page to get started is http://members.cbio.mines-paristech.fr/~thocking/animint2-manual/Ch02-ggplot2.html\n\nFor this task your goal is to create an interactive data visualization and post it online using the animint2gist function which is described here,  http://members.cbio.mines-paristech.fr/~thocking/animint2-manual/Ch05-sharing.html#animint2gist\n\nSince this is a beginner task you can just copy the code for a data visualization from the online manual. You will need to install R and the animint2 package, then execute some code for creating an interactive data viz, then use the animint2gist function to post the data viz online on your gist profile. Make sure to include the bl.ocks link here, e.g. \nhttp://bl.ocks.org/tdhock/raw/8495cd5164a38c360ee1/\nhttp://bl.ocks.org/tdhock/raw/aef616ba22fee33e82f5/\nhttp://bl.ocks.org/tdhock/raw/cfc5d67636ee76d42be0/\nhttp://bl.ocks.org/tdhock/raw/10f27e4ace80bffa10a0/\n\nThe harder version of this task is https://codein.withgoogle.com/dashboard/tasks/5702474908827648/","tags":["data viz"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["kr.vivek.ab@gmail.com","tdhock5@gmail.com"],"max_instances":5,"name":"(easy) Create an interactive data visualization using animint2","last_modified":"2019-12-04T17:37:09Z","available_count":3,"is_beginner":true,"id":4818087656816640,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Some R packages use code coverage to measure the quality of their tests suite. Code coverage is the proportion of lines of package code that are executed during the test suite. The best is 100% which means that all package code is executed during the test suite, and the worst is 0% which means that no package code is executed during the test suite. For this task your goal is to write a new test for an R package that results in increased code coverage for that package.\n\nThe first step is to find an R package on github/gitlab/etc that already uses code coverage. Typical packages will have a badge on the README which shows the current code coverage percent. For example as of this writing the re2r package has 78% code coverage, https://github.com/qinwf/re2r/#re2r\n\nThe next step is to find some package code which is not yet covered by the current test suite. Typically you can find this by clicking on the code coverage badge, and following the links to folders/files with code coverage percentages less than 100. For example in re2r as of this writing most R/*.R files have 100% code coverage https://codecov.io/gh/qinwf/re2r/tree/master/R but match.R and print.R do not have full code coverage.\n\nThe final step is to write a new test that will run the lines of code which are currently un-covered, then commit that as a new test file, then submit a pull request to the repository. This task will be considered complete when the pull request page reports that the code coverage increases.","tags":["tests","code coverage"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["kr.vivek.ab@gmail.com","tdhock5@gmail.com"],"max_instances":2,"name":"Write a test that increases code coverage for an R package","last_modified":"2019-12-01T03:44:29Z","available_count":0,"is_beginner":false,"id":5983563606917120,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Most R packages have a corresponding development repository, for example on github. Popular R packages (with many users) may have many open issues, and some are labeled in order to help developers find which issues they can work on.\n\nFor example the data.table package uses the \"beginner-task\" label, and there are a few open issues: https://github.com/Rdatatable/data.table/issues?q=is%3Aopen+is%3Aissue+label%3Abeginner-task\n\nMore generally, you could search all of github for R language repository issues that have the word \"beginner\" somewhere in the label: https://github.com/search?p=2&q=is%3Aopen+is%3Aissue+label%3Abeginner+language%3AR+state%3Aopen&type=Issues\n\nFor this task you should fix one such outstanding issue. The task will be considered complete when the issue is closed (by the corresponding package maintainer).","tags":["issue"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["kr.vivek.ab@gmail.com","tdhock5@gmail.com"],"max_instances":2,"name":"Fix an outstanding issue in an R package","last_modified":"2019-12-01T03:34:40Z","available_count":0,"is_beginner":false,"id":5373000015151104,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"R has thousands of \"packages\" which provide optional functionality. Packages are published on CRAN, which runs a standard set of checks on the most recent version of each package. Packages are removed from CRAN if they do not pass all of the checks, and the maintainer does not fix the problems after having been altered to them.\n\nIn this task you should first find a CRAN package which does not have checks passing (on at least one platform). To do that you can look at the CRAN check results pages, e.g.\n\n* https://cloud.r-project.org/web/checks/check_results_re2r.html\n* https://cloud.r-project.org/web/checks/check_results_Segmentor3IsBack.html\n\nAfter that, your job is to find the cause of the problem, fix it, and submit your fix as a pull request to the development repo of the package (which is typically listed in the URL field of the DESCRIPTION file of the package). For example if you fix an issue in re2r you should submit a pull request to https://github.com/qinwf/re2r\n\nIf you need more information about how the package works / how to write the fix, you are encouraged to write an email to the maintainer of the package in question (listed in the Maintainer field of the DESCRIPTION file).","tags":["checks","issues"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["kr.vivek.ab@gmail.com","tdhock5@gmail.com","vijay.barve@gmail.com"],"max_instances":2,"name":"Fix CRAN packages which do not pass checks","last_modified":"2019-12-01T03:28:35Z","available_count":0,"is_beginner":false,"id":5140061658546176,"categories":[1,4],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Each R package has a DESCRIPTION file which stores meta-data for that package. Two important but optional fields are URL (to github repo, documentation, or other development web page) and BugReports (issues page URL or other location where bugs should be posted). For this task you should find an R package which has already been published on CRAN, but does not have either URL or BugReports in its DESCRIPTION file. After that, find the corresponding github/gitlab/bitbucket/etc development repository (this is the hard part -- use a web search engine, or email the maintainer listed in the DESCRIPTION file). Fork and clone that repo, and add the URL/BugReports line(s) to the DESCRIPTION file. Commit those changes then submit a pull request, so it is easy for the developers to add this important information to their DESCRIPTION. Some example CRAN packages which are also on github but do not have BugReports/URL: PeakSegOptimal, PeakSegDP, PeakSegJoint, directlabels, WeightedROC.","tags":["url","meta-data","bugs","issues"],"claimed_count":10,"private_metadata":"","completed_count":10,"mentors":["ishanrai05@gmail.com","kr.vivek.ab@gmail.com","tdhock5@gmail.com"],"max_instances":10,"name":"Add URL/BugReports to DESCRIPTION file","last_modified":"2019-12-01T03:16:45Z","available_count":0,"is_beginner":false,"id":6315909082251264,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"It will be useful to have some interesting visualizations added to the readme.md file to give some idea to users what to expect from each function in package bdvis.\n\nIf you have not completed \"Check example code for package bdvis\" please complete that first\n\n1. Please install development version of package bdvis from github (if you have not already done so)\n2. Get some biodiversity occurrence data \n3. Create some interesting output maps and graphs\n4. Share them in response to the issue https://github.com/vijaybarve/bdvis/issues/105","tags":["visualization"],"claimed_count":7,"private_metadata":"","completed_count":7,"mentors":["vijay.barve@gmail.com"],"max_instances":8,"name":"Create samples of visualization outputs for functions in package bdvis","last_modified":"2020-01-03T14:49:41Z","available_count":1,"is_beginner":false,"id":5100418271543296,"categories":[1,5],"external_url":"https://github.com/vijaybarve/bdvis/"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"R is one of the most successful languages in the data science community primarily because of its user-friendly ecosystem.\nReading and writing CSV files is one of the most common operations in Data Science and hence is in-built in R and does not need installation of new packages. This task will introduce you to some common functions and how easy, it is to deal with data frames in R.\n\n#### Tasks:\n1. Read a CSV file from your local computer along with its headers and convert it into a data frame.\n2. Print the first few members of the data frame using an in-built function in R.\n3. Create a new **data frame** `student` in R with at least 5 observations and 3 variables, `name`, `age` and `class`.\n4. Add a new column `height` into the data frame and then add a new row into the data frame.\n5. Export the data frame into a CSV file `students.csv`.\n6. Read a CSV file from the internet directly into R without downloading the file manually and print the first few members.\n\nYou can find help on this at the following links:\nhttps://www.tutorialspoint.com/r/r_csv_files.htm\nhttps://www.cyclismo.org/tutorial/R/input.html#reading-a-csv-file\n\nAttach screenshots of the task executing on your machine. Upload your code on Github including a README highlighting all your steps and submit a link to the repository.","tags":["r"],"claimed_count":15,"private_metadata":"","completed_count":15,"mentors":["ishanrai05@gmail.com","kr.vivek.ab@gmail.com"],"max_instances":15,"name":"Reading and Writing CSV data","last_modified":"2019-12-27T10:08:28Z","available_count":0,"is_beginner":true,"id":5872171818156032,"categories":[1,3],"external_url":""},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [R project in Google Summer Of Code](https://github.com/rstats-gsoc) organization. May your creativity be helped by the idea of relating [R](https://www.r-project.org/logo/Rlogo.png) and [Google Summer Of Code](https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal-800.png) logos.\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nSubmit your logo artwork in the comments section of https://github.com/vijaybarve/taxotools/issues/27","tags":["logo","hexbin","artwork"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["ishanrai05@gmail.com","vijay.barve@gmail.com"],"max_instances":3,"name":"Create a Hex Logo for package taxotools","last_modified":"2019-11-30T20:41:12Z","available_count":0,"is_beginner":false,"id":5493851167391744,"categories":[2],"external_url":"https://github.com/vijaybarve/taxotools"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"In this task we want to reduce the data to make data more comparable across individuals. you can find the dataset in the link below:\n\n1. please check the data quality and structure from the dataset.\n2. clean up the resulting object for simplicity.\n3. make the visualization relationship among the variables.","tags":["visualization","r","reduce data"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["ishanrai05@gmail.com","ozifahrozi2@gmail.com"],"max_instances":3,"name":"Reducing data","last_modified":"2019-12-01T14:12:46Z","available_count":1,"is_beginner":true,"id":4997823985090560,"categories":[1,3],"external_url":"https://github.com/FahroziFahrozi/Google-Code-In-Task/blob/master/Consumer%20dataset.csv"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"In this task there are some questions related about the E-commerce data set (Link below), the purpose from this task is to exploring dataset and get the information from it.\n1. how many observation and variables are in the data set?\n2. which city had the most visitors and how many? Among Australia cities.\n3. Draw a horizontal box plot for the number of site visits.\n4. Solve the previous problem for the city with the most visitors, using the which.max function.\n5. What is the mean-median difference for number of site visits?\n6. What is the mean-median difference for site visits, after excluding the person who had the most visits?","tags":["exploring dataset","r"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["ishanrai05@gmail.com","ozifahrozi2@gmail.com"],"max_instances":4,"name":"Exploring E-commerce data","last_modified":"2019-12-12T14:28:42Z","available_count":1,"is_beginner":true,"id":5386407258882048,"categories":[1,3],"external_url":"https://github.com/FahroziFahrozi/Google-Code-In-Task/blob/master/Task%20Dataset.csv"},{"status":2,"time_to_complete_in_days":7,"program_year":2019,"description":"Gather the data described in task 1 to 5 and make a website that display that data. You have the freedom to make it as a website or web app.","tags":[],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 16 : Create Web Aplication or Website","last_modified":"2019-11-30T12:43:16Z","available_count":3,"is_beginner":true,"id":5900363748605952,"categories":[1,2,3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny/blob/master/README.md"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Video of case study of your choice with R (Case Study 2 of R Case study series playlist)","tags":[],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 12 : Create YouTube/Vimeo videos","last_modified":"2019-11-30T12:42:24Z","available_count":3,"is_beginner":true,"id":5172073626861568,"categories":[3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny/blob/master/README.md"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Video of case study of your choice with R (Case Study 1 of R Case study series playlist)","tags":[],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ishanrai05@gmail.com","sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 11 : Create YouTube/Vimeo videos","last_modified":"2019-11-30T12:42:14Z","available_count":3,"is_beginner":true,"id":4703020147802112,"categories":[3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny/blob/master/README.md"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Installation of R software for Latest Mac Operating System","tags":["mac os"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 10: Create YouTube/Vimeo videos","last_modified":"2019-11-30T20:22:21Z","available_count":1,"is_beginner":false,"id":5862432208060416,"categories":[3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny/blob/master/README.md"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Installation of R software for Latest Windows Operating System","tags":["windows"],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["sunnydhoke22@gmail.com"],"max_instances":1,"name":"Task 09: Create YouTube/Vimeo videos","last_modified":"2019-11-30T20:24:02Z","available_count":0,"is_beginner":true,"id":5770117254742016,"categories":[3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny/blob/master/README.md"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Installation of R software for Linux based operating Systems","tags":["linux"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 08: Create YouTube/Vimeo videos","last_modified":"2019-11-30T20:23:30Z","available_count":3,"is_beginner":true,"id":5091525038440448,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Generate a PDF and Markdown version of the blog series generated in task 06","tags":[],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 07: Use blog tools","last_modified":"2019-11-30T12:38:47Z","available_count":3,"is_beginner":true,"id":5499961026805760,"categories":[2,3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny/blob/master/README.md"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Write a blog series on the most frequently used R questions","tags":[],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 06: Use Medium blogs","last_modified":"2019-11-30T21:51:33Z","available_count":3,"is_beginner":true,"id":5206423097573376,"categories":[3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny/blob/master/README.md"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Find a page View count for StackOverflow questions tagged R ,year wise.","tags":[],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 02: Use the StackOverflow Data Explorer-2","last_modified":"2019-11-30T12:37:41Z","available_count":3,"is_beginner":true,"id":5188160896630784,"categories":[5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Find the number of StackOverflow questions tagged R ,year wise.","tags":[],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["sunnydhoke22@gmail.com"],"max_instances":3,"name":"Task 01: Use the StackOverflow Data Explorer-1","last_modified":"2019-11-30T12:36:46Z","available_count":2,"is_beginner":true,"id":5484399018115072,"categories":[3,5],"external_url":"https://github.com/sunn-e/Google-CodeIn-R-TaskList-MentorSunny"},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Having a blog post at R-bloggers or RWeekly increases the visibility of any R package. The objective of this task is to write a blog post similar to the present at [R-bloggers](https://www.r-bloggers.com/) or [RWeekly](https://rweekly.org/) about the [rco](https://jcrodriguez1989.github.io/rco/) package.\n\nThe blog post must show the benefits of using or applying this R package. We recommend using the R markdown syntax to write the blog post, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nThe resulting post must be submitted as a new issue to the [rco GitHub project](https://github.com/jcrodriguez1989/rco/issues/new).","tags":["optimization","blog post","example","documentation"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Write a blog post about \"rco package\" for R-bloggers or RWeekly.","last_modified":"2019-11-28T15:29:53Z","available_count":0,"is_beginner":false,"id":5727693413285888,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give a good example of (unoptimized) R code that could be optimized by the [\"Constant Folding\"](https://en.wikipedia.org/wiki/Constant_folding) optimization technique.\n\nThis example might be added to the [rco's documentation page](https://github.com/jcrodriguez1989/rco/blob/master/R/opt-constant-folding.R). A new example must be added after the existing ones.\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Give a good example of \"Constant Folding\" optimizable code.","last_modified":"2019-12-06T02:05:28Z","available_count":0,"is_beginner":false,"id":5634124799279104,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give a good example of (unoptimized) R code that could be optimized by the [\"Dead Code Elimination\"](https://en.wikipedia.org/wiki/Dead_code_elimination) optimization technique.\n\nThis example might be added to the [rco's documentation page](https://github.com/jcrodriguez1989/rco/blob/master/R/opt-dead-code.R). A new example must be added after the existing ones.\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Give a good example of \"Dead Code Elimination\" optimizable code.","last_modified":"2019-12-06T02:05:19Z","available_count":0,"is_beginner":false,"id":4839854014201856,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give a good example of (unoptimized) R code that could be optimized by the [\"Constant Propagation\"](https://en.wikipedia.org/wiki/Constant_folding#Constant_propagation) optimization technique.\n\nThis example might be added to the [rco's documentation page](https://github.com/jcrodriguez1989/rco/blob/master/R/opt-constant-propagation.R). A new example must be added after the existing ones.\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Give a good example of \"Constant Propagation\" optimizable code.","last_modified":"2019-12-06T02:05:10Z","available_count":0,"is_beginner":false,"id":5674555138375680,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give a good example of (unoptimized) R code that could be optimized by the \"Dead Expression Elimination\" optimization technique.\n\nThis example might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-dead-expr.html). A new example must be added after the existing ones.\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Give a good example of \"Dead Expression Elimination\" optimizable code.","last_modified":"2019-12-06T02:05:01Z","available_count":0,"is_beginner":false,"id":6323508993327104,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give a good example of (unoptimized) R code that could be optimized by the [\"Dead Store Elimination\"](https://en.wikipedia.org/wiki/Dead_store) optimization technique.\n\nThis example might be added to the [rco's documentation page](https://github.com/jcrodriguez1989/rco/blob/master/R/opt-dead-store.R). A new example must be added after the existing ones.\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Give a good example of \"Dead Store Elimination\" optimizable code.","last_modified":"2019-12-06T02:04:51Z","available_count":0,"is_beginner":false,"id":4856659717914624,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give a good example of (unoptimized) R code that could be optimized by the [\"Common Subexpression Elimination\"](https://en.wikipedia.org/wiki/Common_subexpression_elimination) optimization technique.\n\nThis example might be added to the [rco's documentation page](https://github.com/jcrodriguez1989/rco/blob/master/R/opt-common-subexpr.R). A new example must be added after the existing ones.\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Give a good example of \"Common Subexpression Elimination\" optimizable code.","last_modified":"2019-12-06T02:04:44Z","available_count":0,"is_beginner":false,"id":4923043940401152,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give a good example of (unoptimized) R code that could be optimized by the [\"Loop-invariant Code Motion\"](https://en.wikipedia.org/wiki/Loop-invariant_code_motion) optimization technique.\n\nThis example might be added to the [rco's documentation page](https://github.com/jcrodriguez1989/rco/blob/master/R/opt-loop-invariant.R). A new example must be added after the existing ones.\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Give a good example of \"Loop-invariant Code Motion\" optimizable code.","last_modified":"2019-12-06T02:04:32Z","available_count":0,"is_beginner":false,"id":5632677932171264,"categories":[1,3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [R project in Google Summer Of Code](https://github.com/rstats-gsoc) organization. May your creativity be helped by the idea of relating [R](https://www.r-project.org/logo/Rlogo.png) and [Google Summer Of Code](https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal-800.png) logos.\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nFork the project https://github.com/rstats-gsoc/gsoc2020 , and create a pull request that adds the logo file.","tags":["logo","hexbin","artwork"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Draw a hexagon logo for the  \"R project in Google Summer Of Code\" organization","last_modified":"2019-11-29T03:53:07Z","available_count":0,"is_beginner":false,"id":5635039727976448,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [R project in Google Code-in](https://github.com/rstats-gsoc/gci2019/wiki/Admin-application) organization. May your creativity be helped by the idea of relating [R](https://www.r-project.org/logo/Rlogo.png) and [Google Code-in](https://developers.google.com/open-source/gci/resources/downloads/GCI-new-logo.jpg) logos.\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nFork the project https://github.com/rstats-gsoc/gci2019 , and create a pull request that adds the logo file.","tags":["logo","hexbin","artwork"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Draw a hexagon logo for the  \"R project in Google Code-in\" organization","last_modified":"2019-11-29T03:52:41Z","available_count":0,"is_beginner":false,"id":5700291958145024,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Write R code that reads this [CSV file](https://raw.githubusercontent.com/benubah/r-community-explorer/master/docs/data/rugs.csv) containing R user groups globally and extract groups that were created between July and September 2019 and save the result in a new CSV file.","tags":["r statistical computing","csv","r community explorer","data manipulation"],"claimed_count":5,"private_metadata":"","completed_count":5,"mentors":["ishanrai05@gmail.com","ubah.ben22@gmail.com"],"max_instances":5,"name":"R Community Explorer: Write code that reads and subsets CSV data","last_modified":"2019-12-04T09:52:01Z","available_count":0,"is_beginner":true,"id":4681937361305600,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"This task involves reading real-world data and obtaining data-driven insights around R Meetup events in 2019. These events were extracted from the Meetup API for about 400 R user groups\n\n1. Read the data file into R: https://github.com/r-community/event-explorer/blob/master/docs/data/R_events_2019.rds?raw=true\n2. Obtain a count (frequency) of events for each group and visualize the top 50 groups\n3. Obtain a count (frequency) of events for each city (venue_city) and visualize the top 50 cities (ignore NA values)\n4. Obtain a count (frequency) of events per country and visualize the top 20 countries (ignore NA values)\n5.  Group the events by local_date, tabulate and visualize the number of events per month using a bar chart.\n\n\nSubmit an R script and your visualizations. Your code should be reusable - assuming we have another set of similar data but with other dates, your code should also be able to produce accurate results with little or no changes.","tags":["r statistical computing","data-driven analysis","r community explorer"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"Data-Driven Analysis of R Meetup Events in 2019","last_modified":"2020-01-11T16:07:31Z","available_count":0,"is_beginner":false,"id":4960669430972416,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"This task involves reading real-world data and obtaining useful summaries about R and package dowloads over time.\n\nThe R-Hub cranlogs API is a very simple API to query using a web browser or R. You can read more about this API here: https://github.com/r-hub/cranlogs.app\n\nUsing R: install the `jsonlite` R package.\n\nExample 1 -  For R package downloads: `jsonlite::fromJSON(\"https://cranlogs.r-pkg.org/downloads/total/2014-01-01:2014-06-01\")`\n\nExample 2 - For Base R downloads: https://cranlogs.r-pkg.org/downloads/total/2014-01-01:2014-06-01/R\n\nThis task involves:\n\n1. Using this API to obtain data for total R package downloads for 2018 and 2019.\n2. Using this API to obtain data for total Base R downloads for 2018 and 2019.\n3. Visualizing R package downloads for 2018 and 2019\n4. Visualizing total base R downloads for 2018 and 2019\n5. Storing the results of 1 and 2 above in a single CSV file - one record for each year.\n6. Compute (in percentage) the increase of base R downloads and R package downloads from 2018 to 2019\n7. Provide a month-by-month comparison of R package downloads for 2018 and 2019 in a CSV table (visualization can added but is optional)","tags":["cranlogs","r statistical computing","api"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"Exploring CRAN downloads in 2018 and 2019","last_modified":"2020-01-10T09:46:26Z","available_count":1,"is_beginner":false,"id":6176315867136000,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"This task involves reading real-world data and obtaining useful summaries about the growth of R User Groups globally between 2018 and 2019.\n\nTasks for R User Groups:\n1. Read the following data into R: https://raw.githubusercontent.com/benubah/r-community-explorer/master/docs/data/rugs.csv\n2. Obtain the number of user-groups that were `created` in  2018.\n    2a. Compute the total number of members in these groups\n    2b. Compute the total number of past_events for these groups\n    2c. In how many countries and cities are these groups located\n3. Obtain the number of user-groups that were `created` in  2019.\n    3a. Compute the total number of members in these groups\n    3b. Compute the total number of past_events for these groups\n    3c. In how many countries and cities are these groups located?\n4. Visualize the comparison of the numbers obtained in 2 and 3\n\nOnce you have completed the above tasks, the code  you created should be able to automatically solve the tasks below without any further work except changing the input data.\n\nTasks for R-Ladies Chapters:\n1.  Read the following data into R: https://raw.githubusercontent.com/benubah/r-community-explorer/master/docs/data/rladies.csv\n2. Same as in R User Groups above\n3. Same as in R User Groups above\n4. Same as in R User Groups above\n\nSubmit separate scripts for R User Groups and R-Ladies Chapters","tags":["cranlogs","r statistical computing","code"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"Exploring R User Group and R-Ladies Chapter growth","last_modified":"2020-01-10T07:22:15Z","available_count":1,"is_beginner":false,"id":5720342744530944,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give an easy-to-understand/non-technical explanation of [\"Loop-invariant Code Motion\"](https://en.wikipedia.org/wiki/Loop-invariant_code_motion) code optimization technique.\n\nThis explanation might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-loop-invariant.html). A new topic named \"Idea\" must be added before the \"Background\" topic. In order to add it, the rco project must be forked, and the file https://github.com/jcrodriguez1989/rco/blob/master/vignettes/opt-loop-invariant.Rmd modified. This file is an R markdown file, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["explain","markdown","optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Explain with simple-words the \"Loop-invariant Code Motion\" rco's optimization strategy.","last_modified":"2019-12-06T02:02:47Z","available_count":0,"is_beginner":false,"id":4811329425113088,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give an easy-to-understand/non-technical explanation of [\"Dead Store Elimination\"](https://en.wikipedia.org/wiki/Dead_store) code optimization technique.\n\nThis explanation might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-dead-store.html). A new topic named \"Idea\" must be added before the \"Background\" topic. In order to add it, the rco project must be forked, and the file https://github.com/jcrodriguez1989/rco/blob/master/vignettes/opt-dead-store.Rmd modified. This file is an R markdown file, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["explain","markdown","optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Explain with simple-words the \"Dead Store Elimination\" rco's optimization strategy.","last_modified":"2019-12-06T02:03:08Z","available_count":0,"is_beginner":false,"id":6299515326300160,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give an easy-to-understand/non-technical explanation of \"Dead Expression Elimination\" code optimization technique.\n\nThis explanation might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-dead-expr.html). A new topic named \"Idea\" must be added before the \"Background\" topic. In order to add it, the rco project must be forked, and the file https://github.com/jcrodriguez1989/rco/blob/master/vignettes/opt-dead-expr.Rmd modified. This file is an R markdown file, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["explain","markdown","optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Explain with simple-words the \"Dead Expression Elimination\" rco's optimization strategy.","last_modified":"2019-12-06T02:05:46Z","available_count":0,"is_beginner":false,"id":6299331313795072,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give an easy-to-understand/non-technical explanation of [\"Dead Code Elimination\"](https://en.wikipedia.org/wiki/Dead_code_elimination) code optimization technique.\n\nThis explanation might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-dead-code.html). A new topic named \"Idea\" must be added before the \"Background\" topic. In order to add it, the rco project must be forked, and the file https://github.com/jcrodriguez1989/rco/blob/master/vignettes/opt-dead-code.Rmd modified. This file is an R markdown file, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["explain","markdown","optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Explain with simple-words the \"Dead Code Elimination\" rco's optimization strategy.","last_modified":"2019-12-06T02:05:56Z","available_count":0,"is_beginner":false,"id":5668060879388672,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give an easy-to-understand/non-technical explanation of [\"Constant Propagation\"](https://en.wikipedia.org/wiki/Constant_folding#Constant_propagation) code optimization technique.\n\nThis explanation might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-constant-propagation.html). A new topic named \"Idea\" must be added before the \"Background\" topic. In order to add it, the rco project must be forked, and the file https://github.com/jcrodriguez1989/rco/blob/master/vignettes/opt-constant-propagation.Rmd modified. This file is an R markdown file, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["explain","markdown","optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar","ishanrai05@gmail.com"],"max_instances":3,"name":"Explain with simple-words the \"Constant Propagation\" rco's optimization strategy.","last_modified":"2019-12-06T02:04:00Z","available_count":0,"is_beginner":false,"id":4774162925617152,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give an easy-to-understand/non-technical explanation of [\"Constant Folding\"](https://en.wikipedia.org/wiki/Constant_folding) code optimization technique.\n\nThis explanation might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-constant-folding.html). A new topic named \"Idea\" must be added before the \"Background\" topic. In order to add it, the rco project must be forked, and the file https://github.com/jcrodriguez1989/rco/blob/master/vignettes/opt-constant-folding.Rmd modified. This file is an R markdown file, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["explain","markdown","optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Explain with simple-words the \"Constant Folding\" rco's optimization strategy.","last_modified":"2019-12-06T02:03:49Z","available_count":0,"is_beginner":false,"id":5393327524937728,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The idea behind this task would be to give an easy-to-understand/non-technical explanation of [\"Common Subexpression Elimination\"](https://en.wikipedia.org/wiki/Common_subexpression_elimination) code optimization technique.\n\nThis explanation might be added to the [rco's documentation page](https://jcrodriguez1989.github.io/rco/articles/opt-common-subexpr.html). A new topic named \"Idea\" must be added before the \"Background\" topic. In order to add it, the rco project must be forked, and the file https://github.com/jcrodriguez1989/rco/blob/master/vignettes/opt-common-subexpr.Rmd modified. This file is an R markdown file, it is recommended to install RStudio to [easily compile this file](https://bookdown.org/yihui/rmarkdown/compile.html).\n\nCreate a [pull request](https://github.com/firstcontributions/first-contributions) to the repository with your work, and provide the pull request link as a comment to the task.","tags":["explain","markdown","optimization","example"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Explain with simple-words the \"Common Subexpression Elimination\" rco's optimization strategy.","last_modified":"2019-12-06T02:04:11Z","available_count":0,"is_beginner":false,"id":6315973640978432,"categories":[3,5],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [autokeras](https://github.com/r-tensorflow/autokeras) R package. The hex logo must be related to the task the package develops. In this case, autokeras is a tool for auto deep learning, for more information you could check out the [AutoKeras Python library](https://autokeras.com/). Also, a fun idea would be to mix between the auto (car in spanish) word and the [Keras library](https://keras.io/).\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nFork the package for which you drew the logo, and create a pull request that adds the logo file.","tags":["logo","hexbin","examples","artwork"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Draw a hexagon logo for the autokeras package","last_modified":"2019-11-28T14:31:54Z","available_count":0,"is_beginner":false,"id":5924650446487552,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [rco](https://jcrodriguez1989.github.io/rco/) R package. The hex logo must be related to the task the package develops. In this case, rco optimizes existing R code, in order to make it faster in execution time.\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nFork the package for which you drew the logo, and create a pull request that adds the logo file.","tags":["logo","hexbin","examples","artwork"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["jcrodriguez@unc.edu.ar"],"max_instances":3,"name":"Draw a hexagon logo for the rco package","last_modified":"2019-11-28T14:33:49Z","available_count":0,"is_beginner":false,"id":6050721426833408,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"There are many ways for Data visualization in R, Lattice graphics is one of the way to plot graphics in R, and look different from standard R graphics.\n\nIn this task, I encourage you to make simple visualization\n- create a simple data set with 4 different variable (W,X,Y,Z) where W,X,Y are numeric and Z is character with different group character (a, b ,c)\n- show your data frame\n- plot a scatter plot\n-make a plot from data shown above in two different panels, split by variable z\n-Make two data series on the same plot.\n\nGood luck!","tags":["r statistical computing","data visualization","graphics"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["ozifahrozi2@gmail.com"],"max_instances":3,"name":"Data Visualization in R with Lattice Graphics","last_modified":"2019-12-23T13:29:26Z","available_count":0,"is_beginner":true,"id":5739805892149248,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [R project in Google Summer Of Code](https://github.com/rstats-gsoc) organization. May your creativity be helped by the idea of relating [R](https://www.r-project.org/logo/Rlogo.png) and [Google Summer Of Code](https://developers.google.com/open-source/gsoc/resources/downloads/GSoC-logo-horizontal-800.png) logos.\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nSubmit your logo artwork in the comments section of https://github.com/vijaybarve/bdvis/issues/104","tags":["logo","hexbin","artwork"],"claimed_count":3,"private_metadata":"","completed_count":3,"mentors":["vijay.barve@gmail.com"],"max_instances":3,"name":"Create a Hex Logo for package bdvis","last_modified":"2019-11-30T20:40:02Z","available_count":0,"is_beginner":false,"id":5720063806537728,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The R-Hub cranlogs API is a very simple API to query using a web browser or R. You can read more about this API here: https://github.com/r-hub/cranlogs.app\n\nThis task involves using this API to obtain data for total R package downloads for a specified period of time.\n\nExample 1 - Using a web browser: Copy and paste the following URL into a web browser\nhttps://cranlogs.r-pkg.org/downloads/total/2019-01-01:2019-06-01\n\nThe response is a JSON object that contains the start date (Jan 01, 2019), end date (Jun 01, 2019) and the total download of all R packages for the time period.\n\nExample 2 - Using R: install the `jsonlite` R package. Then from the R console execute this statement: `jsonlite::fromJSON(\"https://cranlogs.r-pkg.org/downloads/total/2019-01-01:2019-06-01\")`\n\nNow, the task is to obtain the total downloads of all R packages in 2018, half-yearly and save the results in a single CSV file. This means you will obtain total downloads from January 01 to June 30, and from July 01 to December 31 for the year.\n\nSubmit the result at https://github.com/benubah/gci2019","tags":["cranlogs","r statistical computing","api"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"Use the simple Cranlogs API to obtain half-yearly R package downloads summaries in 2018","last_modified":"2019-12-02T07:39:32Z","available_count":1,"is_beginner":true,"id":6254403825172480,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The R-Hub cranlogs API is a very simple API to query using a web browser or R. You can read more about this API here: https://github.com/r-hub/cranlogs.app\n\nThis task involves using this API to obtain data for total base R downloads for a specified period of time.\n\nExample 1 - Using a web browser: Copy and paste the following URL into a web browser\nhttps://cranlogs.r-pkg.org/downloads/total/2019-01-01:2019-06-01/R\n\nThe response is a JSON object that contains the start date (Jan 01, 2019), end date (Jun 01, 2019) and the total R downloads for the time period.\n\nExample 2 - Using R: install the `jsonlite` R package. Then from the R console execute this statement: `jsonlite::fromJSON(\"https://cranlogs.r-pkg.org/downloads/total/2019-01-01:2019-06-01/R\")`\n\nNow, the task is to obtain the total base R downloads in 2018 and save the results in a single CSV file containing the headers: \"start\", \"end\" and \"downloads\".\n\nSubmit the result at https://github.com/benubah/gci2019","tags":["code","r statistical computing","cranlogs"],"claimed_count":2,"private_metadata":"","completed_count":2,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"Use the simple Cranlogs API to obtain base R download summaries in 2018","last_modified":"2019-12-02T19:47:34Z","available_count":1,"is_beginner":true,"id":5195232728055808,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"The R-Hub cranlogs API is a very simple API to query using a web browser or R. You can read more about this API here: https://github.com/r-hub/cranlogs.app\n\nThis task involves using this API to obtain data for total R package downloads for a specified period of time.\n\nExample 1 - Using a web browser: Copy and paste the following URL into a web browser\nhttps://cranlogs.r-pkg.org/downloads/total/2019-01-01:2019-06-01\n\nThe response is a JSON object that contains the start date (Jan 01, 2019), end date (Jun 01, 2019) and the total download of all R packages for the time period.\n\nExample 2 - Using R: install the `jsonlite` R package. Then from the R console execute this statement: `jsonlite::fromJSON(\"https://cranlogs.r-pkg.org/downloads/total/2019-01-01:2019-06-01\")`\n\nNow, the task is to obtain the total downloads of all R packages in 2018 and save the results in a single CSV file.\n\nSubmit the result at https://github.com/benubah/gci2019","tags":["code","r statistical computing","cranlogs"],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["ishanrai05@gmail.com","ubah.ben22@gmail.com"],"max_instances":3,"name":"Use the simple Cranlogs API to obtain R package download summaries in 2018","last_modified":"2019-12-01T19:32:03Z","available_count":2,"is_beginner":true,"id":4859123686965248,"categories":[1],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task you should draw a new hexagon logo for an R package that does not have one yet. First, find an R package with a github page that does not show any hexagon logo. Now you have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).\n\nFork the package for which you drew the logo, and create a pull request that adds the logo file. You should put a PNG/raster image in man/figures/logo.png as described here, https://pkgdown.r-lib.org/reference/build_home.html#sidebar and you should also include a SVG/vector image (and/or whatever other source file you used) in man/figures/logo.svg","tags":["logo","hexbin","examples","artwork"],"claimed_count":6,"private_metadata":"","completed_count":6,"mentors":["kr.vivek.ab@gmail.com","tdhock5@gmail.com","manubio13@gmail.com"],"max_instances":0,"name":"Draw a hexagon logo for an R package","last_modified":"2020-01-07T06:47:36Z","available_count":0,"is_beginner":false,"id":6439597983137792,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Add latitude and longitude columns with corresponding values to the CSV file - https://github.com/RConsortium/project-analysis/blob/master/data/events.csv\nMake these columns the two last columns.\n\nName these columns to be \"lat\" and \"lon\" respectively, and include latitude and longitude data that corresponds to the city for each record.\n\nSubmit the result at https://github.com/benubah/gci2019","tags":["r statistical computing","data","spatial"],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["ubah.ben22@gmail.com"],"max_instances":1,"name":"Add spatial attributes to data","last_modified":"2019-12-02T07:36:06Z","available_count":0,"is_beginner":true,"id":5753863370440704,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Curate a csv (comma separated value) file that contains records for all past satRday events found here: https://satrdays.org/events/\nEach event has a dedicated website with information about the event.\n\nThe file will have the following structure: https://github.com/r-community/event-explorer/blob/master/docs/data/satrdays.csv\nBut the status of the events will be \"Past\" instead of \"Upcoming\". \nLeave out any columns for which you cannot find enough data on the satRday event website.\n\nSubmit the result at https://github.com/benubah/gci2019","tags":["r statistical computing","satrdays","data","csv"],"claimed_count":1,"private_metadata":"","completed_count":1,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"Curate a CSV file for Past SatRday Events","last_modified":"2019-12-02T07:26:43Z","available_count":2,"is_beginner":true,"id":5918786541060096,"categories":[3],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"Many software packages have hexagon logos. Examples from R include [data.table](https://github.com/Rdatatable/data.table#datatable-) and [ggplot2](https://github.com/tidyverse/ggplot2#ggplot2-); there are many from [outside the R ecosystem](http://hexb.in/) as well. In this task, you should draw a new hexagon logo for the [R Community Explorer]() project. May your creativity be helped by the idea of relating [R](https://www.r-project.org/logo/Rlogo.png) and any free community icon like [this](https://www.vectorstock.com/royalty-free-vector/community-logo-icon-vector-19168188) .\n\nYou have two choices about how to make the logo:\n\n1. Use R itself to draw the logo! To do that you will need to install R, the package for which you want to create the logo, and the [hexSticker](https://github.com/GuangchuangYu/hexSticker) package. Remember that in R you can install packages via as on your computer via `install.packages(\"pkgname\")` or `devtools::install_github(\"pkgname\")`. Most packages have examples with plots/graphics that you can use on the hexagon logo -- use `example(functionName, package=\"pkgname\")` to run the example code for a function. Finally, use the hexSticker package to draw the logo.\n\n2. draw by hand using a program such as [Inkscape](https://inkscape.org/).\n\nThe [hexbin](https://github.com/maxogden/hexbin#submit-a-hexagon) github repo recommends SVG file, 181x209 PNG file, and [printing size 2\" x 1.73\"](http://hexb.in/sticker.html).","tags":["hex logo","r statistical computing","design","r community explorer"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ubah.ben22@gmail.com"],"max_instances":3,"name":"R Community Explorer: Draw a hexagon logo for this project","last_modified":"2020-01-20T11:50:00Z","available_count":3,"is_beginner":false,"id":5667845560598528,"categories":[2],"external_url":null},{"status":2,"time_to_complete_in_days":3,"program_year":2019,"description":"For the [README.md page](https://github.com/benubah/r-community-explorer/blob/master/README.md) of R Community Explorer, create a section called \"Tools\" that lists (just listing without descriptions) all the tools used to build this application. Each list item (or each tool) would be hyperlinked to its appropriate web page on the Web where further information could be found about the tool.\n\nHint: scan through different directories and HTML files of [the application on GitHub](https://github.com/benubah/r-community-explorer) to see the different dependency files. Read the blog posts regarding this app at the following URLs:\n\n1. https://opendatascience.com/data-driven-exploration-of-the-r-user-community-worldwide/\n\n2. https://www.r-consortium.org/blog/2019/09/09/r-community-explorer-r-user-groups\n\nSubmit the result at https://github.com/benubah/gci2019","tags":["r statistical computing","documentation","r community explorer"],"claimed_count":0,"private_metadata":"","completed_count":0,"mentors":["ubah.ben22@gmail.com"],"max_instances":2,"name":"Document all tools used to develop R Community Explorer","last_modified":"2019-12-02T07:21:22Z","available_count":2,"is_beginner":true,"id":5272832804651008,"categories":[3],"external_url":null}]}
